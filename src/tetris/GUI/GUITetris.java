/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package tetris.GUI;

import java.awt.event.KeyEvent;
import tetris.lib.board.TetrisBoard;

/**
 *
 * @author danie
 */
public class GUITetris extends javax.swing.JFrame {

    TetrisBoard game = new TetrisBoard(10, 10);
    
    

    public GUITetris() {
        initComponents();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        LblLinhas = new javax.swing.JLabel();
        LblColunas = new javax.swing.JLabel();
        btnCreateGame = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtGame = new javax.swing.JTextArea();
        btnLeft = new javax.swing.JButton();
        btnRight = new javax.swing.JButton();
        BtnRotate = new javax.swing.JButton();
        BtnDown = new javax.swing.JButton();
        btnFallDown = new javax.swing.JButton();
        SpnLinha = new javax.swing.JSpinner();
        SpnColuna = new javax.swing.JSpinner();
        BtnMenu = new javax.swing.JButton();
        tetrisBoard1 = new tetris.lib.board.TetrisBoard();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Text Tetris");
        addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                formKeyPressed(evt);
            }
        });

        LblLinhas.setFont(new java.awt.Font("Consolas", 0, 18)); // NOI18N
        LblLinhas.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        LblLinhas.setText("Linhas");
        LblLinhas.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        LblColunas.setFont(new java.awt.Font("Consolas", 0, 18)); // NOI18N
        LblColunas.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        LblColunas.setText("Colunas");

        btnCreateGame.setFont(new java.awt.Font("Tw Cen MT", 0, 18)); // NOI18N
        btnCreateGame.setText("Criar tabuleiro");
        btnCreateGame.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreateGameActionPerformed(evt);
            }
        });
        btnCreateGame.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btnCreateGameKeyPressed(evt);
            }
        });

        txtGame.setEditable(false);
        txtGame.setColumns(20);
        txtGame.setFont(new java.awt.Font("Monospaced", 0, 18)); // NOI18N
        txtGame.setRows(5);
        jScrollPane1.setViewportView(txtGame);

        btnLeft.setIcon(new javax.swing.ImageIcon(getClass().getResource("/tetris/images/esquerda.jpg"))); // NOI18N
        btnLeft.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnLeft.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLeftActionPerformed(evt);
            }
        });
        btnLeft.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btnLeftKeyPressed(evt);
            }
        });

        btnRight.setIcon(new javax.swing.ImageIcon(getClass().getResource("/tetris/images/direita.jpg"))); // NOI18N
        btnRight.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnRight.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRightActionPerformed(evt);
            }
        });
        btnRight.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btnRightKeyPressed(evt);
            }
        });

        BtnRotate.setIcon(new javax.swing.ImageIcon(getClass().getResource("/tetris/images/rotate.jpg"))); // NOI18N
        BtnRotate.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        BtnRotate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnRotateActionPerformed(evt);
            }
        });
        BtnRotate.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                BtnRotateKeyPressed(evt);
            }
        });

        BtnDown.setIcon(new javax.swing.ImageIcon(getClass().getResource("/tetris/images/baixo.jpg"))); // NOI18N
        BtnDown.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        BtnDown.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnDownActionPerformed(evt);
            }
        });
        BtnDown.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                BtnDownKeyPressed(evt);
            }
        });

        btnFallDown.setFont(new java.awt.Font("Tw Cen MT", 0, 18)); // NOI18N
        btnFallDown.setText("S P A C E");
        btnFallDown.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnFallDown.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFallDownActionPerformed(evt);
            }
        });
        btnFallDown.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btnFallDownKeyPressed(evt);
            }
        });

        SpnLinha.setFont(new java.awt.Font("Consolas", 0, 18)); // NOI18N
        SpnLinha.setModel(new javax.swing.SpinnerNumberModel(10, 6, null, 1));
        SpnLinha.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        SpnLinha.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                SpnLinhaPropertyChange(evt);
            }
        });

        SpnColuna.setFont(new java.awt.Font("Consolas", 0, 18)); // NOI18N
        SpnColuna.setModel(new javax.swing.SpinnerNumberModel(10, 6, null, 1));
        SpnColuna.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        BtnMenu.setFont(new java.awt.Font("Tw Cen MT", 0, 18)); // NOI18N
        BtnMenu.setText("Sair para o Menu");
        BtnMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnMenuActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout tetrisBoard1Layout = new javax.swing.GroupLayout(tetrisBoard1);
        tetrisBoard1.setLayout(tetrisBoard1Layout);
        tetrisBoard1Layout.setHorizontalGroup(
            tetrisBoard1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 206, Short.MAX_VALUE)
        );
        tetrisBoard1Layout.setVerticalGroup(
            tetrisBoard1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 273, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(20, 20, 20)
                            .addComponent(btnLeft, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(BtnDown, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(btnRight, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(BtnRotate, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(btnCreateGame, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(SpnLinha, javax.swing.GroupLayout.DEFAULT_SIZE, 88, Short.MAX_VALUE)
                                    .addComponent(LblLinhas, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(LblColunas, javax.swing.GroupLayout.DEFAULT_SIZE, 90, Short.MAX_VALUE)
                                    .addComponent(SpnColuna))))
                        .addComponent(btnFallDown, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(BtnMenu, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(tetrisBoard1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(20, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(LblColunas, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(LblLinhas, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(SpnLinha, javax.swing.GroupLayout.DEFAULT_SIZE, 34, Short.MAX_VALUE)
                            .addComponent(SpnColuna))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnCreateGame, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(69, 69, 69)
                        .addComponent(BtnRotate, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(btnLeft, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(btnRight, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(BtnDown, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnFallDown, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(22, 22, 22)
                        .addComponent(BtnMenu, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(22, 22, 22))
            .addGroup(layout.createSequentialGroup()
                .addGap(102, 102, 102)
                .addComponent(tetrisBoard1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        btnCreateGame.setFocusable(false);
        SpnLinha.setValue(10);
        //SpnLinha.setStepSize(8);
        SpnColuna.setValue(10);
        //SpnColuna.setStepSize(4);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCreateGameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreateGameActionPerformed
        // TODO add your handling code here:
        int lines = (Integer) SpnLinha.getValue();
        int columns = (Integer) SpnColuna.getValue();
        //construir o jogo
        this.game = new TetrisBoard(lines, columns);
        //Mostrar o jogo
        txtGame.setText(game.toString());


    }//GEN-LAST:event_btnCreateGameActionPerformed

    private void btnRightActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRightActionPerformed
        // TODO add your handling code here:
        this.game.moveRight();
        txtGame.setText(game.toString());
    }//GEN-LAST:event_btnRightActionPerformed

    private void btnLeftActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLeftActionPerformed
        // TODO add your handling code here:
        game.moveLeft();
        txtGame.setText(game.toString());
    }//GEN-LAST:event_btnLeftActionPerformed

    private void BtnRotateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnRotateActionPerformed
        // TODO add your handling code here:
        game.rotate();
        txtGame.setText(game.toString());
    }//GEN-LAST:event_BtnRotateActionPerformed

    private void BtnDownActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnDownActionPerformed
        // TODO add your handling code here:
        game.moveDown();
        txtGame.setText(game.toString());
    }//GEN-LAST:event_BtnDownActionPerformed

    private void btnFallDownActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFallDownActionPerformed
        // TODO add your handling code here:
        game.fallDown();
        txtGame.setText(game.toString());
    }//GEN-LAST:event_btnFallDownActionPerformed

    private void BtnMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnMenuActionPerformed
        this.dispose();
        new Menu().setVisible(true);
    }//GEN-LAST:event_BtnMenuActionPerformed

    private void BtnRotateKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_BtnRotateKeyPressed
        
    }//GEN-LAST:event_BtnRotateKeyPressed

    private void btnLeftKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnLeftKeyPressed
        
    }//GEN-LAST:event_btnLeftKeyPressed

    private void BtnDownKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_BtnDownKeyPressed
        
    }//GEN-LAST:event_BtnDownKeyPressed

    private void btnRightKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnRightKeyPressed
       
    }//GEN-LAST:event_btnRightKeyPressed

    private void btnFallDownKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnFallDownKeyPressed
        
    }//GEN-LAST:event_btnFallDownKeyPressed

    private void btnCreateGameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnCreateGameKeyPressed
        // TODO add your handling code here:
        
        
        //jogar com o teclado (não está a funcionar
        
        int key = evt.getKeyCode();  // Keyboard code for the pressed key.

        if (key == KeyEvent.VK_W || key == KeyEvent.VK_UP) {
            game.rotate();
            txtGame.setText(game.toString());

        }if (key == KeyEvent.VK_A || key == KeyEvent.VK_LEFT) {
            game.moveLeft();
            txtGame.setText(game.toString());

        }if (key == KeyEvent.VK_S || key == KeyEvent.VK_DOWN) {
            game.moveDown();
            txtGame.setText(game.toString());

        }if (key == KeyEvent.VK_D || key == KeyEvent.VK_RIGHT) {
            game.moveRight();
            txtGame.setText(game.toString());

        }if (key == KeyEvent.VK_SPACE) {
            game.fallDown();
            txtGame.setText(game.toString());

        }if (key == KeyEvent.VK_ENTER) {
            int lines = (Integer) SpnLinha.getValue();
            int columns = (Integer) SpnColuna.getValue();
            //construir o jogo
            this.game = new TetrisBoard(lines, columns);
            //Mostrar o jogo
            txtGame.setText(game.toString());

        }
    }//GEN-LAST:event_btnCreateGameKeyPressed

    private void formKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyPressed
        
    }//GEN-LAST:event_formKeyPressed

    private void SpnLinhaPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_SpnLinhaPropertyChange
        // TODO add your handling code here:
        Jframe.
    }//GEN-LAST:event_SpnLinhaPropertyChange
    
    /**
     * @param args the command line arguments
     */
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BtnDown;
    private javax.swing.JButton BtnMenu;
    private javax.swing.JButton BtnRotate;
    private javax.swing.JLabel LblColunas;
    private javax.swing.JLabel LblLinhas;
    private javax.swing.JSpinner SpnColuna;
    private javax.swing.JSpinner SpnLinha;
    private javax.swing.JButton btnCreateGame;
    private javax.swing.JButton btnFallDown;
    private javax.swing.JButton btnLeft;
    private javax.swing.JButton btnRight;
    private javax.swing.JScrollPane jScrollPane1;
    private tetris.lib.board.TetrisBoard tetrisBoard1;
    private javax.swing.JTextArea txtGame;
    // End of variables declaration//GEN-END:variables
}
